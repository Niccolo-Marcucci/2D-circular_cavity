# This script file creates a combined Plasma+Lorentz model.  The n,k data
# is output to a new material (Sampled data), and plotted.
#
# This script can be used to create any combination of Plasma, Lorentz, 
# Debye, and Conductivity models. 
#
# The current Plasma+Lorentz models give a reasonable fit to Au (gold)
# in the visible.

clear;
# ########BEGINNING OF INPUT SECTION##################
# specify a name for the new material - it will only be
# added if it does not already exist
newmaterialname = "new material";

# Specify starting and ending wavelength
start_lambda = 0.2e-6;  
end_lambda = 1.6e-6;

# number of points to sample between start_lambda and end_lambda
num = 100;

# Real part
eps_real = 1.13249e1;

# Conductivity
conductivity = 0;

# Plasma Model Parameters: set both w_pand v_c_plasma to ZERO if not using this model,otherwise set it to the desired value. 
w_p = 1.38071e16;
v_c_plasma =  1.17195e14;

# Debye Model Parameters: set both e_debye and v_c_debye to ZERO if not using this model,otherwise set it to the desired value
e_debye =  0;
v_c_debye = 0;

# Lorentz Model Parameters: set e_lorentz, w_0, and sig_0 to ZERO if not using this model, otherwise set it to the desired value
e_lorentz = 1.49292e-4;
w_0 = 2.08767e11;
sig_0 = 3.97466e17;
# #############END OF INPUT SECTION#####################


# Initialize freqency and wavelength vector
lambda = linspace(start_lambda, end_lambda, num);
f = c / lambda;
# Calculates conductivity contribution
eps_cond = conductivity / (2*pi*f*eps0);
# Calculates Plasma model permittivity
eps_plasma = -w_p^2/(2*pi*f*(1i*v_c_plasma + 2*pi*f));
# Calculates Debye model permittivity
eps_debye = e_debye * v_c_debye / (v_c_debye - 1i * 2 * pi * f);
# Calculates Lorentz model permittivity
eps_lorentz = e_lorentz * w_0^2/(w_0^2 - 2i * sig_0 * 2 * pi * f - (2 * pi * f)^2);
# Add All contribution
eps_total = eps_real + eps_cond*1i +eps_plasma + eps_debye + eps_lorentz;
index = sqrt(eps_total);


# plot rea and imaginary parts of permittivity/ index vs wavelength
plot(lambda*1e6, real(eps_total), imag(eps_total), "wavelength (microns)" , " permittivity");
legend("real eps","imaginary eps");
plot(lambda*1e6, real(index), imag(index), "wavelength (microns)" , "index");
legend("real index","imaginary index");


#add new material to the database
if(findstring(setmaterial,newmaterialname) <= 0 ) { #add material if it does not already exist
  tempname = addmaterial("Sampled data");
  setmaterial(tempname,"name",newmaterialname);
}
#loading the data to the new material
setmaterial(newmaterialname,"sampled data",[f,eps_total]);
setmaterial(newmaterialname,"improve numerical stability",false); # set false to obtain a better fit